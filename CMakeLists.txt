PROJECT ( libxdiff )
CMAKE_MINIMUM_REQUIRED ( VERSION 2.8.11 )

INCLUDE ( CheckFunctionExists )
INCLUDE ( CheckIncludeFiles )
INCLUDE ( CMakePackageConfigHelpers )

SET ( XDIFF_MAJOR_VERSION 0 )
SET ( XDIFF_MINOR_VERSION 23 )
SET ( XDIFF_PATCH_VERSION 0 )
SET ( XDIFF_VERSION "${XDIFF_MAJOR_VERSION}.${XDIFF_MINOR_VERSION}.${XDIFF_PATCH_VERSION}" )

SET ( PACKAGE_NAME "libxdiff" )
SET ( PACKAGE_VERSION ${XDIFF_VERSION} )
SET ( PACKAGE_STRING "${PACKAGE_NAME}-${PACKAGE_VERSION}" )

SET ( CMAKE_INCLUDE_CURRENT_DIR ON )
SET ( CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE ON )

IF ( MSVC )
    ADD_DEFINITIONS (
        -D_CRT_SECURE_NO_DEPRECATE
        -D_CRT_NONSTDC_NO_DEPRECATE
    )
ENDIF ()

CHECK_INCLUDE_FILES ( dlfcn.h HAVE_DLFCN_H )
CHECK_INCLUDE_FILES ( inttypes.h HAVE_INTTYPES_H )
CHECK_INCLUDE_FILES ( limits.h HAVE_LIMITS_H )
CHECK_INCLUDE_FILES ( memory.h HAVE_MEMORY_H )
CHECK_INCLUDE_FILES ( stdint.h HAVE_STDINT_H )
CHECK_INCLUDE_FILES ( stdio.h HAVE_STDIO_H )
CHECK_INCLUDE_FILES ( stdlib.h HAVE_STDLIB_H )
CHECK_INCLUDE_FILES ( strings.h HAVE_STRINGS_H )
CHECK_INCLUDE_FILES ( string.h HAVE_STRING_H )
CHECK_INCLUDE_FILES ( sys/stat.h HAVE_SYS_STAT_H )
CHECK_INCLUDE_FILES ( sys/types.h HAVE_SYS_TYPES_H )
CHECK_INCLUDE_FILES ( unistd.h HAVE_UNISTD_H )

CHECK_FUNCTION_EXISTS ( free HAVE_FREE )
CHECK_FUNCTION_EXISTS ( malloc HAVE_MALLOC )
CHECK_FUNCTION_EXISTS ( memchr HAVE_MEMCHR )
CHECK_FUNCTION_EXISTS ( memcmp HAVE_MEMCMP )
CHECK_FUNCTION_EXISTS ( memcpy HAVE_MEMCPY )
CHECK_FUNCTION_EXISTS ( memset HAVE_MEMSET )
CHECK_FUNCTION_EXISTS ( realloc HAVE_REALLOC )
CHECK_FUNCTION_EXISTS ( strlen HAVE_STRLEN )

OPTION ( BUILD_SHARED "Build shared libraries" OFF )
IF ( BUILD_SHARED )
    SET ( LIBRARY_TYPE SHARED )
ELSE ()
    SET ( LIBRARY_TYPE STATIC )
ENDIF ()

CONFIGURE_FILE ( config.h.in config.h )

FILE ( GLOB libxdiff_SOURCES src/*.c )
FILE ( GLOB libxdiff_HEADERS include/*.h )

INCLUDE_DIRECTORIES ( include/ )

IF ( WIN32 AND BUILD_SHARED )
    SET ( xdiff_EXPORTS xdiff.def )
ENDIF ()

ADD_LIBRARY ( xdiff ${LIBRARY_TYPE} ${libxdiff_SOURCES} ${libxdiff_HEADERS} ${xdiff_EXPORTS} )
IF ( HAVE_DLFCN_H )
    TARGET_LINK_LIBRARIES ( xdiff dl )
ENDIF ()

ADD_SUBDIRECTORY ( examples )

SET_PROPERTY ( TARGET xdiff PROPERTY VERSION ${XDIFF_VERSION} )
SET_PROPERTY ( TARGET xdiff PROPERTY SOVERSION 0 )
SET_PROPERTY ( TARGET xdiff PROPERTY INTERFACE_xdiff_MAJOR_VERSION 3)
SET_PROPERTY ( TARGET xdiff APPEND PROPERTY COMPATIBLE_INTERFACE_STRING XDIFF_MAJOR_VERSION )

INSTALL ( FILES ${libxdiff_HEADERS} DESTINATION include/xdiff )
INSTALL ( FILES "${CMAKE_CURRENT_BINARY_DIR}/config.h" DESTINATION include/xdiff )
INSTALL (
    TARGETS xdiff
    EXPORT XDiffTargets
    ARCHIVE DESTINATION lib
    LIBRARY DESTINATION lib
    RUNTIME DESTINATION lib
)

WRITE_BASIC_PACKAGE_VERSION_FILE (
    "${CMAKE_CURRENT_BINARY_DIR}/XDiff/XDiffConfigVersion.cmake"
    VERSION ${XDIFF_VERSION}
    COMPATIBILITY AnyNewerVersion
)
EXPORT ( TARGETS xdiff
    FILE "${CMAKE_CURRENT_BINARY_DIR}/XDiff/XDiffTargets.cmake"
)
CONFIGURE_FILE ( XDiffConfig.cmake "${CMAKE_CURRENT_BINARY_DIR}/XDiff/XDiffConfig.cmake" COPYONLY )
SET ( ConfigPackageLocation lib/cmake/XDiff )
INSTALL ( EXPORT XDiffTargets FILE XDiffTargets.cmake DESTINATION ${ConfigPackageLocation} )
INSTALL (
    FILES
        XDiffConfig.cmake
        "${CMAKE_CURRENT_BINARY_DIR}/XDiff/XDiffConfigVersion.cmake"
    DESTINATION ${ConfigPackageLocation}
)
